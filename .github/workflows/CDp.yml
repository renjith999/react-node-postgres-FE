AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  GitHubOwner:
    Type: String
    Description: 'GitHub owner (username or organization)'
  GitHubRepo:
    Type: String
    Description: 'GitHub repository name'
  GitHubBranch:
    Type: String
    Default: 'main'
    Description: 'GitHub branch name'
  GitHubOAuthToken:
    Type: String
    Description: 'GitHub OAuth token with repo scope'
  StackName:
    Type: String
    Default: 'MyCustomStack'
    Description: 'Name for the CloudFormation stack'

Resources:
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref PipelineArtifactsBucket
      Stages:
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: SourceOutput
        - Name: Deploy
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt CloudFormationDeployRole.Arn
                StackName: !Ref StackName
                TemplatePath: SourceOutput::template.yml
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: SourceOutput

  CodePipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource:
                  - !Sub 'arn:aws:s3:::${PipelineArtifactsBucket}/*'
                  - !Sub 'arn:aws:s3:::${PipelineArtifactsBucket}'
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt CloudFormationDeployRole.Arn

  CloudFormationDeployRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CloudFormationPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:DescribeStackResources
                  - cloudformation:DescribeStacks
                  - cloudformation:GetTemplate
                  - cloudformation:DeleteChangeSet
                  - cloudformation:ListStackResources
                Resource: '*'

  PipelineArtifactsBucket:
    Type: 'AWS::S3::Bucket'
